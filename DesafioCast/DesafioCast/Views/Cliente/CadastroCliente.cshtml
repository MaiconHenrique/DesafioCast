@model DesafioCast.Models.Cliente

@{
    ViewData["Title"] = "CadastroCliente";
}

<h2>CadastroCliente</h2>

<h4>Cliente</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="cliente" asp-action="CadastroCliente" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cpf" class="control-label">CPF do cliente</label>
                <input asp-for="Cpf" class="form-control" />
                <span asp-validation-for="Cpf" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Cadastrar" class="btn btn-success"
                       onclick="return alert('Cliente cadastrado com sucesso!')" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Cliente">Voltar para lista de clientes.</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.0/jquery.mask.js"></script>
    <script>
        $(document).ready(function () {
            var $CampoCpf = $("#Cpf");
            $CampoCpf.mask('000.000.000-00', { reverse: true });
        });
    </script>
}